name: Generate Route Images for All Walls

on:
  push:
    branches:
      - main
    paths:
      - 'walls/**'
      - '.github/workflows/**'
      - '.github/scripts/**'
  workflow_dispatch:

jobs:
  list_walls:
    runs-on: ubuntu-latest
    outputs:
      walls_json: ${{ steps.get_walls.outputs.walls_json }}
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4
      - name: 'List all wall directories'
        id: get_walls
        run: |
          WALLS=$(find walls -mindepth 1 -maxdepth 1 -type d | jq -R . | jq -cs .)
          echo "Found walls: $WALLS"
          echo "walls_json=$WALLS" >> $GITHUB_OUTPUT

  build:
    needs: list_walls
    if: fromJson(needs.list_walls.outputs.walls_json)[0] != null
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        wall_dir: ${{ fromJson(needs.list_walls.outputs.walls_json) }}
        
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4
      - name: 'Set up Python 3.9'
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: 'Cache Pip dependencies'
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: 'Install dependencies'
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade "Pillow>=9.2.0"
          pip install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cpu
          pip install numpy opencv-python-headless easyocr
      - name: 'Download and Prepare Font'
        run: |
          mkdir -p fonts
          curl -L "https://github.com/google/fonts/raw/main/ofl/oswald/Oswald%5Bwght%5D.ttf" -o "fonts/Oswald-Variable.ttf"
      
      - name: 'Step 1: Generate Hold Coordinates (if not exists)'
        run: |
          HOLDS_FILE="${{ matrix.wall_dir }}/output/data/holds.json"
          if [ ! -f "$HOLDS_FILE" ]; then
            echo "File '$HOLDS_FILE' not found. Generating..."
            python .github/scripts/generate_coords.py \
              --image_path "${{ matrix.wall_dir }}/image_marked.png" \
              --output_path "$HOLDS_FILE"
          else
            echo "File '$HOLDS_FILE' already exists. Skipping generation."
          fi

      - name: 'Step 2: Draw All Route Images'
        run: |
          python .github/scripts/draw_route.py \
            --routes_database_file "${{ matrix.wall_dir }}/routes.json" \
            --holds_coords_path "${{ matrix.wall_dir }}/output/data/holds.json" \
            --base_image_path "${{ matrix.wall_dir }}/image_base.png" \
            --output_dir "${{ matrix.wall_dir }}/output/generated_routes"

      - name: 'Step 3: Generate debug image'
        run: python .github/scripts/mark_all_holds.py --wall_dir "${{ matrix.wall_dir }}"

      - name: 'Step 4: Check for missing holds'
        run: python .github/scripts/check_missing_holds.py "${{ matrix.wall_dir }}"

      # --- 核心修复点 1: 清理名称并上传产物 ---
      - name: 'Create sanitized artifact name'
        id: sanitize_name
        run: |
          # 使用 Bash 的参数扩展功能，将所有的 '/' 替换为 '-'
          ARTIFACT_NAME="generated-output-for-${{ matrix.wall_dir }}"
          echo "name=${ARTIFACT_NAME//\//-}" >> $GITHUB_OUTPUT

      - name: 'Upload generated output'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.sanitize_name.outputs.name }}
          path: ${{ matrix.wall_dir }}/output/
          retention-days: 1

  commit_and_package:
    needs: build
    if: always() && needs.build.result == 'success'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # --- 核心修复点 2: 下载所有产物并正确放置 ---
      - name: 'Download all generated outputs'
        uses: actions/download-artifact@v4
        with:
          path: temp-artifacts/

      - name: 'Move artifacts to correct locations'
        run: |
          for dir in temp-artifacts/*; do
            if [ -d "$dir" ]; then
              # 从 'generated-output-for-walls-spray_wall' 中提取出 'walls/spray_wall'
              original_path=$(basename "$dir" | sed -e 's/generated-output-for-//' -e 's/-/\\//g')
              echo "Moving files from $dir to $original_path/output"
              # 确保目标目录存在
              mkdir -p "$original_path"
              # 将下载的内容移动到它本该在的位置
              mv "$dir"/* "$original_path/output/"
            fi
          done

      - name: 'Step 5: Commit all generated files'
        id: auto-commit-action
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "feat(walls): Auto-generate route and debug images"
          file_pattern: "walls/"
          
      - name: 'Step 6: Compress all route images into a single ZIP'
        if: steps.auto-commit-action.outputs.changes_detected == 'true'
        run: |
          # ... (此部分无变化)
          
      - name: 'Step 7: Upload All-Walls Route Images Artifact'
        if: steps.auto-commit-action.outputs.changes_detected == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: climbing-routes-all-walls
          path: climbing_routes_all_walls.zip
